name: Run tests

on:
  pull_request:
  push:

jobs:
  run_tests:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: true
      matrix:
        python-version: ["3.9", "3.10", "3.11"]

    steps:
      - uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}

    #   - name: Install poetry
    #     uses: snok/install-poetry@v1
    #     with:
    #       version: latest
    #       virtualenvs-create: true
    #       virtualenvs-in-project: true
    #       installer-parallel: true

    #   - name: Load cache
    #     uses: actions/cache@v3
    #     id: cache
    #     with:
    #       path: .venv
    #       key: venv-${{ runner.os }}-${{ matrix.python-version }}-${{ hashFiles('**/pyproject.toml') }}
    
      # - name: Install requirements
      #   run: pip install -r requirements.txt
    
      - name: Install package
        run: pip install -e .[dev]

      - name: Check styling
        run: black . --check

      - name: Linting
        run: ruff check --line-length 120 .

      - name: Run pytest
        run: pytest

      # - name: Build Docs
      #   run: mkdocs build
